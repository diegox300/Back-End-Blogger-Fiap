{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "API documentation for the project"
  },
  "host": "tech-challenge-back-end.vercel.app",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/users/{id}": {
      "put": {
        "summary": "Edit an existing user",
        "description": "Edit an existing user with the provided data",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to edit",
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "The user data to edit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User edited successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid data provided"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticate a user and return a JWT token",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "body",
            "name": "login",
            "description": "The login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "Get all posts",
        "description": "Retrieve a list of all posts",
        "tags": ["Posts"],
        "responses": {
          "200": {
            "description": "A list of posts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "description": "Create a new post with the provided data",
        "tags": ["Posts"],
        "parameters": [
          {
            "in": "body",
            "name": "post",
            "description": "The post data to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid data provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/posts/pagination": {
      "get": {
        "summary": "Get posts with pagination",
        "description": "Retrieve a paginated list of posts",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of posts",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                },
                "total": {
                  "type": "integer",
                  "description": "Total number of posts"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary": "Get a single post by ID",
        "description": "Retrieve a single post by its ID",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the post to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested post",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          },
          "400": {
            "description": "Invalid ID provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update a post by ID",
        "description": "Update a post with the provided data",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the post to update",
            "type": "string"
          },
          {
            "in": "body",
            "name": "post",
            "description": "The post data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          },
          "400": {
            "description": "Invalid ID provided / Invalid data provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a post by ID",
        "description": "Delete a post by its ID",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the post to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "400": {
            "description": "Invalid ID provided"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "A list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid data provided or Email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with the provided data",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user data to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/email/{email}": {
      "get": {
        "summary": "Get a user by email",
        "description": "Retrieve a user by their email",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "Email of the user to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Invalid email provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/id/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "description": "Retrieve a user by their ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Invalid ID provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "12345"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "isAdmin": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        },
        "isAdmin": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "12345"
        },
        "title": {
          "type": "string",
          "example": "My First Post"
        },
        "content": {
          "type": "string",
          "example": "This is the content of the post."
        },
        "author": {
          "type": "string",
          "example": "John Doe"
        },
        "img": {
          "type": "string",
          "example": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNxqHVvjehI51bq2YwrC5iElwO7FcWlZGWiQ&s"
        }
      }
    },
    "NewPost": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "My First Post"
        },
        "content": {
          "type": "string",
          "example": "This is the content of the post."
        },
        "img": {
          "type": "string",
          "example": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNxqHVvjehI51bq2YwrC5iElwO7FcWlZGWiQ&s"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
